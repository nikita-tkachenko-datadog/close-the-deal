name: Close the deal pipeline
on: [push]

env:
  DD_API_KEY: ${{ secrets.DD_API_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DD_API_KEY: ${{ secrets.DD_API_KEY }}
    steps:
      - name: Setup
        uses: actions/setup-node@v4
      - name: Build image
        run: echo "Building something..."
      - name: Send image size custom metric
        run: npx @datadog/datadog-ci measure --level pipeline --measures image.size:156

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '>=1.17.0'
          cache: false
      - name: Run Golang tests
        run: go test ./main/additions/...

  dora-deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v3
      - run: |
          export BRANCH=$(git rev-parse --abbrev-ref HEAD)
          if [ "$BRANCH" != "main" ]; then
            ENV=staging
          else
            ENV=prod
          fi
          echo "Deploying to environment: $ENV"
          export DD_BETA_COMMANDS_ENABLED=1
          export DD_API_KEY=${{ secrets.DD_API_KEY }}
          yarn global add @datadog/datadog-ci
          datadog-ci dora deployment --service close-the-deal-ci-cd-nikita --env $ENV --started-at `date +%s`

  deploy-ctd-service:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Install node
        uses: actions/setup-node@v3
      - run: |
          export DD_BETA_COMMANDS_ENABLED=1 
          export DD_API_KEY=${{ secrets.DD_API_KEY }}
          echo "Deploying..."
          yarn global add @datadog/datadog-ci
          datadog-ci deployment mark --env staging --service close-the-deal-ci-cd-nikita --revision 0.0.1
